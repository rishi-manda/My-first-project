import fitz  # PyMuPDF
from sentence_transformers import SentenceTransformer
import numpy as np
import faiss
import logging

# Suppress logging from the SentenceTransformer library
logging.getLogger("sentence_transformers").setLevel(logging.WARNING)

# Load the embedding model
embedding_model = SentenceTransformer('all-MiniLM-L6-v2')

def extract_text_from_pdf(pdf_path):
    text_chunks = []
    with fitz.open(pdf_path) as doc:
        for page in doc:
            text = page.get_text()
            text_chunks.extend(text.split('\n\n'))  # Split by paragraphs
    return text_chunks

def embed_chunks(chunks):
    return embedding_model.encode(chunks)

def store_embeddings(embeddings):
    dim = embeddings.shape[1]
    index = faiss.IndexFlatL2(dim)  # L2 distance
    index.add(embeddings)  # Add embeddings to the index
    return index

def query_embeddings(query, index, chunks):
    query_embedding = embedding_model.encode([query])
    D, I = index.search(query_embedding, k=5)  # Retrieve top 5 results
    return [chunks[i] for i in I[0]]

def extract_text_from_page(pdf_path, page_number):
    text = ""
    with fitz.open(pdf_path) as doc:
        if page_number < len(doc):
            page = doc[page_number]
            text = page.get_text()
    return text

def find_unemployment_info(text, degree_type):
    # This is a simple search; you may need to adjust it based on the actual text format
    lines = text.split('\n')
    for line in lines:
        if degree_type.lower() in line.lower():
            return line  # Return the line containing the degree type
    return "No information found for the specified degree type."

# Corrected PDF path
pdf_path = r"C:\Users\reddy\Downloads\Tables- Charts- and Graphs with Examples from History- Economics- Education- Psychology- Urban Affairs and Everyday Life - 2017-2018.pdf"  # Use raw string

# Extract tabular data from page 6
page_number_table = 5  # Page 6 (zero-indexed)
table_data = extract_text_from_page(pdf_path, page_number_table)

# Display the tabular data
print("Table data  from page 6:")
print(table_data)

# Extract unemployment information from page 2
page_number_unemployment = 1  # Page 2 (zero-indexed)
unemployment_text = extract_text_from_page(pdf_path, page_number_unemployment)

# Prompt user for degree type input
degree_type = input("\nEnter the type of degree to find unemployment information: ")
unemployment_info = find_unemployment_info(unemployment_text, degree_type)

# Display the unemployment information
print("Unemployment Information:")
print(unemployment_info)